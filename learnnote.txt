git

初始化版本库(repository) git init
查看状态 git status
查看记录 git log [--graph] [--pretty=oneline] [--abbrev-commit]
                  显示图像     仅显示1行         显示短版本号
查看操作记录 git reflog
查看stage与最新版本区别 git diff
查看工作区与最新版本区别 git diff HEAD -- <file>

添加文件到暂存区(stage) git add <file>
将暂存区修改提交到当前分支 git commit -m <message>

撤销暂存区修改 git reset HEAD <file>
撤销工作区修改 git checkout -- <file>
回退版本 git reset [--hard] <commit id>
    
    commit id:
        HEAD 表示当前版本
        HEAD^, HEAD^^,... 表示上一个，上两个……版本
        HEAD~20 表示上20个版本


分支操作
查看分支 git branch
创建分支 git branch <branchname>
删除分支 git branch -d <branchname>
强行删除分支 git branch -D <branchname>
改变当前分支 git checkout <branchname>
创建并改变当前分支 git checkout -b <branchname>
合并分支 git merge [--no-ff] [-m <message>] <branchname>
              禁用fast_forward模式
    fast_forward模式会将当前分支直接移到合并的分支，删除该分支后会失去该分支信息，
    禁用后则会保留分支，在merge时生成一个新的commit
分支合并冲突时，修改后重新提交可以解决冲突
分支管理策略：主分支master用于版本发布，在dev分支上工作，合作者各自建立自己的分支。

储藏当前工作 git stash
查看stash  git stash list
从stash恢复 git stash apply [stash@{<id>}]
                           从指定id恢复（否则从最顶端0恢复）
删除stash内容 git stash drop [stash@{<id>}]
    注意：Windows PowerShell中 { }符号需要转义，分别写为`{ `}
清空stash内容 git stash clear
弹出stash内容 git stash pop
    等价于 git stash apply
           git stash drop

                           
                           


